import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import React from 'react';
import classnames from 'classnames';
import assign from 'core-js/library/fn/object/assign';
/**
 * Container
 * @author mayingcong <mayingcong@xingxy.cn>
 * @date   2016-11-01
 */
var Container = React.createClass({
    displayName: 'Container',

    propTypes: {
        fill: React.PropTypes.bool,
        scrollable: React.PropTypes.bool,
        className: React.PropTypes.string,
        column: React.PropTypes.bool,
        withPadding: React.PropTypes.bool
    },
    getDefaultProps: function getDefaultProps() {
        return {
            column: false,
            scrollable: false,
            fill: false,
            withPadding: true
        };
    },

    render: function render() {
        var _props = this.props;
        var fill = _props.fill;
        var scrollable = _props.scrollable;
        var className = _props.className;
        var column = _props.column;
        var withPadding = _props.withPadding;

        var props = _objectWithoutProperties(_props, ['fill', 'scrollable', 'className', 'column', 'withPadding']);

        var containerClass = classnames('container', className, {
            'fill': fill,
            'scrollable': scrollable,
            'column': column
        });
        if (!withPadding) {
            assign(props, {
                style: {
                    padding: '0'
                }
            });
        }
        return React.createElement('div', _extends({ className: containerClass }, props));
    }
});

export default Container;