import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
/**
 * Button
 * @author mayingcong <mayingcong@xingxy.cn>
 * @date   2016-11-01
 */

import React from 'react';
import classnames from 'classnames';
import elementType from 'react-prop-types/lib/elementType';

var Button = React.createClass({
    displayName: 'Button',

    propTypes: {
        active: React.PropTypes.bool,
        block: React.PropTypes.bool,
        componentClass: elementType,
        disabled: React.PropTypes.bool,
        href: React.PropTypes.string,
        onClick: React.PropTypes.func,
        type: React.PropTypes.oneOf(['button', 'submit', 'reset'])
    },
    getDefaultProps: function getDefaultProps() {
        return {
            block: false,
            active: false,
            disabled: false
        };
    },
    render: function render() {
        var _props = this.props;
        var active = _props.active;
        var disabled = _props.disabled;
        var className = _props.className;
        var href = _props.href;
        var type = _props.type;
        var block = _props.block;
        var componentClass = _props.componentClass;

        var props = _objectWithoutProperties(_props, ['active', 'disabled', 'className', 'href', 'type', 'block', 'componentClass']);

        var Component = componentClass || 'button';
        var fullClassName = classnames('btn', className, {
            'btn-block': block,
            'active': active,
            'disabled': disabled
        });
        if (href) {
            return React.createElement('a', _extends({}, props, { href: href, className: fullClassName }));
        }
        return React.createElement(Component, _extends({}, props, { type: type || 'button', className: fullClassName }));
    }
});

export default Button;