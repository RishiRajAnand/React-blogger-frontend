import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import React from 'react';
import classnames from 'classnames';
import Icon from './Icon';
var TabBar = React.createClass({
    displayName: 'TabBar',

    propTypes: {
        classPrefix: React.PropTypes.string
    },
    getDefaultProps: function getDefaultProps() {
        return {
            classPrefix: 'tabbar'
        };
    },
    render: function render() {
        var _props = this.props;
        var classPrefix = _props.classPrefix;

        var props = _objectWithoutProperties(_props, ['classPrefix']);

        return React.createElement('nav', _extends({ className: classPrefix }, props));
    }
});

var TabBarItem = React.createClass({
    displayName: 'TabBarItem',

    propTypes: {
        component: React.PropTypes.any,
        classPrefix: React.PropTypes.string,
        active: React.PropTypes.bool,
        icon: React.PropTypes.string,
        href: React.PropTypes.string,
        title: React.PropTypes.string
    },
    getDefaultProps: function getDefaultProps() {
        return {
            component: 'span',
            classPrefix: 'tabbar',
            active: false
        };
    },
    renderTitle: function renderTitle() {
        var _props2 = this.props;
        var title = _props2.title;
        var classPrefix = _props2.classPrefix;

        return title ? React.createElement(
            'span',
            { className: classPrefix + '-title' },
            title
        ) : null;
    },
    renderIcon: function renderIcon() {
        var icon = this.props.icon;

        return icon ? React.createElement(Icon, { name: this.props.icon }) : null;
    },
    render: function render() {
        var _props3 = this.props;
        var classPrefix = _props3.classPrefix;
        var active = _props3.active;
        var Component = _props3.component;

        var props = _objectWithoutProperties(_props3, ['classPrefix', 'active', 'component']);

        Component = this.props.href ? 'a' : Component;

        delete props.icon;
        delete props.title;

        var itemClass = classnames(classPrefix + '-item', {
            'active': active
        });
        return React.createElement(
            Component,
            _extends({ className: itemClass }, props),
            this.renderIcon(),
            this.renderTitle()
        );
    }
});

TabBar.Item = TabBarItem;
export default TabBar;