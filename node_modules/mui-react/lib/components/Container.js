'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _assign = require('core-js/library/fn/object/assign');

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Container
 * @author mayingcong <mayingcong@xingxy.cn>
 * @date   2016-11-01
 */
var Container = _react2.default.createClass({
    displayName: 'Container',

    propTypes: {
        fill: _react2.default.PropTypes.bool,
        scrollable: _react2.default.PropTypes.bool,
        className: _react2.default.PropTypes.string,
        column: _react2.default.PropTypes.bool,
        withPadding: _react2.default.PropTypes.bool
    },
    getDefaultProps: function getDefaultProps() {
        return {
            column: false,
            scrollable: false,
            fill: false,
            withPadding: true
        };
    },

    render: function render() {
        var _props = this.props;
        var fill = _props.fill;
        var scrollable = _props.scrollable;
        var className = _props.className;
        var column = _props.column;
        var withPadding = _props.withPadding;

        var props = _objectWithoutProperties(_props, ['fill', 'scrollable', 'className', 'column', 'withPadding']);

        var containerClass = (0, _classnames2.default)('container', className, {
            'fill': fill,
            'scrollable': scrollable,
            'column': column
        });
        if (!withPadding) {
            (0, _assign2.default)(props, {
                style: {
                    padding: '0'
                }
            });
        }
        return _react2.default.createElement('div', _extends({ className: containerClass }, props));
    }
});

exports.default = Container;