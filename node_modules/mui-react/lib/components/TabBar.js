'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = require('./Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var TabBar = _react2.default.createClass({
    displayName: 'TabBar',

    propTypes: {
        classPrefix: _react2.default.PropTypes.string
    },
    getDefaultProps: function getDefaultProps() {
        return {
            classPrefix: 'tabbar'
        };
    },
    render: function render() {
        var _props = this.props;
        var classPrefix = _props.classPrefix;

        var props = _objectWithoutProperties(_props, ['classPrefix']);

        return _react2.default.createElement('nav', _extends({ className: classPrefix }, props));
    }
});

var TabBarItem = _react2.default.createClass({
    displayName: 'TabBarItem',

    propTypes: {
        component: _react2.default.PropTypes.any,
        classPrefix: _react2.default.PropTypes.string,
        active: _react2.default.PropTypes.bool,
        icon: _react2.default.PropTypes.string,
        href: _react2.default.PropTypes.string,
        title: _react2.default.PropTypes.string
    },
    getDefaultProps: function getDefaultProps() {
        return {
            component: 'span',
            classPrefix: 'tabbar',
            active: false
        };
    },
    renderTitle: function renderTitle() {
        var _props2 = this.props;
        var title = _props2.title;
        var classPrefix = _props2.classPrefix;

        return title ? _react2.default.createElement(
            'span',
            { className: classPrefix + '-title' },
            title
        ) : null;
    },
    renderIcon: function renderIcon() {
        var icon = this.props.icon;

        return icon ? _react2.default.createElement(_Icon2.default, { name: this.props.icon }) : null;
    },
    render: function render() {
        var _props3 = this.props;
        var classPrefix = _props3.classPrefix;
        var active = _props3.active;
        var Component = _props3.component;

        var props = _objectWithoutProperties(_props3, ['classPrefix', 'active', 'component']);

        Component = this.props.href ? 'a' : Component;

        delete props.icon;
        delete props.title;

        var itemClass = (0, _classnames2.default)(classPrefix + '-item', {
            'active': active
        });
        return _react2.default.createElement(
            Component,
            _extends({ className: itemClass }, props),
            this.renderIcon(),
            this.renderTitle()
        );
    }
});

TabBar.Item = TabBarItem;
exports.default = TabBar;